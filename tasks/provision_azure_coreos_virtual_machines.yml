#!/usr/bin/env ansible-playbook
# tasks/provision_azure_coreos_virtual_machines.yml
---

- name: Create an Azure resource group "{{ azure_rg }}" for running the Virtual Machines
  azure_rm_resourcegroup:
    name: "{{ azure_rg }}"
    location: "{{ azure_rg_location }}"
    tags:
      testing: container-linux
      delete: never

- name: Create an Azure Virtual Network "{{ azure_rg_virt_net_cidr }}"
  azure_rm_virtualnetwork:
    resource_group: "{{ azure_rg }}"
    name: "{{ azure_rg_virt_net_name }}"
    address_prefixes: "{{ azure_rg_virt_net_cidr }}"

- name: Add subnet for VMs to "{{ azure_rg_virt_net_name }}"
  azure_rm_subnet:
    resource_group: "{{ azure_rg }}"
    name: "{{ azure_rg_virt_subnet_name }}"
    address_prefix: "{{ azure_rg_virt_subnet_addr }}"
    virtual_network: "{{ azure_rg_virt_net_name }}"

- name: Create public IP address for the virtual machine "{{ item.key }}".
  azure_rm_publicipaddress:
    resource_group: "{{ azure_rg }}"
    allocation_method: Static
    name: "{{ azure_vm_public_ip_name }}"
  with_dict "{{ container_linux_virtual_machines }}"
  register: output_ip_address

- name: Dump public IP for "{{ item.key }}" VM  which will be created
  debug:
    msg: "The public IP for "{{ item.key }}" is {{ output_ip_address.state.ip_address }}."
  with_dict "{{ container_linux_virtual_machines }}"

- name: Create Network Security Group "{{ azure_rg_sec_group }}"  that allows SSH, HTTP, and HTTPS  to the Azure Resource Group "{{ azure_rg }}"
  azure_rm_securitygroup:
    resource_group: "{{ azure_rg }}"
    name: "{{ azure_rg_sec_group }}"
    rules:
      - name: SSH
        protocol: Tcp
        destination_port_range: 22
        access: Allow
        priority: 1001
        direction: Inbound

      - name: HTTP
        protocol: Tcp
        destination_port_range: 80
        access: Allow
        priority: 1002
        direction: Inbound

      - name: HTTPS
        protocol: Tcp
        destination_port_range: 443
        access: Allow
        priority: 1003
        direction: Inbound

- name: Creating virtual network interface for "{{ item.key }}"
  azure_rm_networkinterface:
    resource_group: "{{ azure_rg }}"
    name: "{{ item.value.azure_vm_nic }}"
    virtual_network: "{{ azure_rg_virt_net_name }}"
    subnet: "{{ azure_rg_virt_subnet_name }}"
    public_ip_name: "{{ azure_vm_public_ip_name }}"
    security_group: "{{ azure_rg_sec_group }}"
  with_dict "{{ container_linux_virtual_machines }}"

- name: Creating VirtualMachine "{{ item.key }}"
  azure_rm_virtualmachine:
    name: "{{ item_key }}"
    resource_group: "{{ azure_rg }}"
    vm_size: "{{ azure_vm_size }}"
    managed_disk_type: "{{ azure_managed_disk_type }}"
    admin_username: core
    admin_password: "{{ container_linux_admin_password }}"
    ssh_password_enabled: true
    ssh_public_keys: 
      - path: "/home/core/.ssh/authorized_keys"
        key_data: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    network_interfaces: "{{ item.value.azure_vm_nic }}"
    image:
      offer: CoreOS
      publisher: CoreOS
      sku: "{{ container_linux_sku }}"
      version: "{{ container_linux_version }}"
  with_dict "{{ container_linux_virtual_machines }}"
